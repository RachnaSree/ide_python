name: CI/CD - Online IDE to EKS

on:
  workflow_dispatch: # Manual trigger only

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: ide-cluster-1
  DEPLOYMENT_NAME: online-ide-deployment
  K8S_MANIFEST: deployment.yaml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Git SHA
        run: echo "SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/online-ide:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/online-ide:${{ env.SHA_SHORT }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Deploy or update Kubernetes deployment
        run: |
          # Apply manifest (Deployment + Service)
          kubectl apply -f ${{ env.K8S_MANIFEST }}

          # Check if deployment exists
          if kubectl get deployment ${{ env.DEPLOYMENT_NAME }} >/dev/null 2>&1; then
            echo "Deployment exists, updating image..."
            kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
              online-ide=${{ secrets.DOCKERHUB_USERNAME }}/online-ide:${{ env.SHA_SHORT }} \
              --record
          else
            echo "Deployment does not exist, creating..."
            kubectl apply -f ${{ env.K8S_MANIFEST }}
          fi

      - name: Verify rollout status
        run: kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
